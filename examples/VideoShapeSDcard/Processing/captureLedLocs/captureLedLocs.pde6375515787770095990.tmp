import gab.opencv.*;
import processing.video.*;

//Movie video;
OpenCV opencv;
Capture cam;

void setup() {
  size(320, 240);
  

  
  //video = new Movie(this, "C:/priv/gd2/Dropbox/LocalDev/Sean/Processing/Processing3.0/videoExample01/SunSurface02_320x240_SaS_90_2000_01.mov");
  //surface.setSize(video.width, video.height);
  //opencv = new OpenCV(this, 320, 240);
  //opencv.startBackgroundSubtraction(5, 3, 0.5);
  
  //video.loop();
  //video.play();
  
  String[] cameras = Capture.list();
  
  if (cameras.length == 0) {
    println("There are no cameras available for capture.");
    exit();
  } else {
    println("Available cameras:");
    for (int i = 0; i < cameras.length; i++) {
      println(cameras[i]);
    }
    
    // The camera can be initialized directly using an 
    // element from the array returned by list():
    cam = new Capture(this, cameras[0]);
    cam.start();     
  }      
}

void draw() {
  
  if (cam.available() == true) {
    cam.read();
    
    if (cam.width > width || cam.height > height) {
      surface.setResizable(true);
      println("reset frame size: " + cam.width +","+ cam.height +","+ width +","+ height);
      surface.setSize(cam.width, cam.height);
      surface.setResizable(false);
      
      opencv = new OpenCV(this, cam.width, cam.height);
      opencv.startBackgroundSubtraction(5, 3, 0.5);
    }
    

  }
  
  image(cam, 0, 0);  
  
  if (opencv != null) {
    opencv.loadImage(cam);
    opencv.updateBackground();
    opencv.dilate();
    opencv.erode();
  }  


  noFill();
  stroke(255, 0, 0);
  strokeWeight(3);
  for (Contour contour : opencv.findContours()) {
    contour.draw();
  }
}

void movieEvent(Movie m) {
  m.read();
}
